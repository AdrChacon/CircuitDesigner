package logica;

import estructuras.List;
/**
 * Compuerta personalizada - Es una compuerta compuesta por varias compuertas previamente definidas por el usuario
 * @author Chacón Campos
 *
 */
public class CustomGate extends Compuerta{
	protected List circuitry;
	protected List inputGates;
	protected List outputGates;
	
	public CustomGate(String gateId, List circuit) {
		super(gateId);
		this.circuitry = circuit;
		inputGates = findInputGates();
		outputGates = findOutputGates();
	}

	@Override
	public void verifyState() {
		
	}

	@Override
	public boolean getState() {
		return false;
	}
	
	public List getInputGates() {
		return inputGates;
	}
	
	public List getOutputGates() {
		return outputGates;
	}
	
	private List findInputGates() {
		List gates = new List();
		for(int i = 1; i <= circuitry.getSize(); i++) {
			if (circuitry.getNodeInPosition(i).getData().getInputListSize() == 0) {
				gates.addNode(circuitry.getNodeInPosition(i).getData());
			}
		}
		return gates;
	}
	
	private List findOutputGates() {
		List gates = new List();
		for(int i = 1; i <= circuitry.getSize(); i++) {
			if (circuitry.getNodeInPosition(i).getData().getOutputListSize() == 0) {
				gates.addNode(circuitry.getNodeInPosition(i).getData());
			}
		}
		return gates;
	}

}
